{"version":3,"sources":["webpack:///src/app/folder/folder.page.html","webpack:///src/app/folder/folder-routing.module.ts","webpack:///src/app/folder/folder.module.ts","webpack:///src/app/folder/folder.page.scss","webpack:///src/app/folder/folder.page.ts"],"names":["routes","path","component","FolderPageRoutingModule","imports","forChild","exports","FolderPageModule","declarations","FolderPage","geolocation","activatedRoute","folder","snapshot","paramMap","get","coordinates","getCurrentPosition","then","resp","map","setView","coords","latitude","longitude","attribution","addTo","console","log","error","selector","template","providers"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,uBAAuB;AAAA;AAAA,O;;AAAvBA,6BAAuB,6DAJnC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAImC,GAAvBH,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,gBAAgB;AAAA;AAAA,O;;AAAhBA,sBAAgB,6DAT5B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,8EAJO,CADD;AAORI,oBAAY,EAAE,CAAC,uDAAD;AAPN,OAAT,CAS4B,GAAhBD,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCWFE,UAAU;AAMrB,4BACUC,WADV,EAEUC,cAFV,EAEwC;AAAA;;AAD9B,eAAAD,WAAA,GAAAA,WAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACL;;AATgB;AAAA;AAAA,qCAWV;AACT,iBAAKC,MAAL,GAAc,KAAKD,cAAL,CAAoBE,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,IAA1C,CAAd;AAED;AAdoB;AAAA;AAAA,4CAgBN;AACb,iBAAKC,WAAL;AACD;AAlBoB;AAAA;AAAA,wCAoBV;AAAA;;AACT,iBAAKN,WAAL,CAAiBO,kBAAjB,GAAsCC,IAAtC,CACE,UAACC,IAAD,EAAU;AACR,mBAAI,CAACC,GAAL,GAAW,IAAI,2CAAJ,CAAQ,OAAR,EAAiBC,OAAjB,CAAyB,CAACF,IAAI,CAACG,MAAL,CAAYC,QAAb,EAAsBJ,IAAI,CAACG,MAAL,CAAYE,SAAlC,CAAzB,EAAuE,EAAvE,CAAX;AACA,wEAAU,oDAAV,EACA;AACEC,2BAAW,EAAE;AADf,eADA,EAGCC,KAHD,CAGO,KAAI,CAACN,GAHZ,EAFQ,CAKU;AACpB;AACA;;AACAO,qBAAO,CAACC,GAAR,CAAYT,IAAI,CAACG,MAAL,CAAYC,QAAZ,GAAqB,KAArB,GAA2BJ,IAAI,CAACG,MAAL,CAAYE,SAAnD;AAEA,aAXF,WAWU,UAACK,KAAD,EAAW;AAClBF,qBAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCC,KAAtC;AACD,aAbF;AAeD;AApCoB;;AAAA;AAAA,S;;;;gBATd;;gBADA;;;;AAUIpB,gBAAU,6DANtB,gEAAU;AACTqB,gBAAQ,EAAE,YADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,8FAFS;AAITC,iBAAS,EAAE,CAAC,yEAAD,CAJF;;;;AAAA,OAAV,CAMsB,GAAVvB,UAAU,CAAV","file":"folder-folder-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>{{ folder }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">{{ folder }}</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <div id=\\\"mapId\\\" style=\\\"height: 200px;\\\"></div>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FolderPage } from './folder.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FolderPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FolderPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FolderPageRoutingModule } from './folder-routing.module';\n\nimport { FolderPage } from './folder.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FolderPageRoutingModule\n  ],\n  declarations: [FolderPage]\n})\nexport class FolderPageModule {}\n","export default \"ion-menu-button {\\n  color: var(--ion-color-primary);\\n}\\n\\n#container {\\n  text-align: center;\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n\\n#container strong {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n#container p {\\n  font-size: 16px;\\n  line-height: 22px;\\n  color: #8c8c8c;\\n  margin: 0;\\n}\\n\\n#container a {\\n  text-decoration: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9sZGVyL2ZvbGRlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwrQkFBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsUUFBQTtFQUNBLDJCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxTQUFBO0FBQ0Y7O0FBRUE7RUFDRSxxQkFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvZm9sZGVyL2ZvbGRlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tbWVudS1idXR0b24ge1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xufVxuXG4jY29udGFpbmVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuXG4jY29udGFpbmVyIHN0cm9uZyB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDI2cHg7XG59XG5cbiNjb250YWluZXIgcCB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjOGM4YzhjO1xuICBtYXJnaW46IDA7XG59XG5cbiNjb250YWluZXIgYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport {Map,tileLayer,marker} from 'leaflet';\n\n@Component({\n  selector: 'app-folder',\n  templateUrl: './folder.page.html',\n  styleUrls: ['./folder.page.scss'],\n  providers: [Geolocation]\n})\nexport class FolderPage implements OnInit {\n  public folder: string;\n  map:Map;\n  newMarker:any;\n  address:string[];\n\n  constructor(\n    private geolocation: Geolocation,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.folder = this.activatedRoute.snapshot.paramMap.get('id');\n    \n  }\n\n  ionViewDidEnter(){\n    this.coordinates();\n  }\n\n  coordinates(){\n    this.geolocation.getCurrentPosition().then(\n      (resp) => {\n        this.map = new Map(\"mapId\").setView([resp.coords.latitude,resp.coords.longitude], 13);\n        tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n        { \n          attribution: 'Map data Â© <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY- SA</a>'\n      }).addTo(this.map); // This line is added to add the Tile Layer to our map\n      // resp.coords.latitude\n      // resp.coords.longitude\n      console.log(resp.coords.latitude+\" & \"+resp.coords.longitude);\n      \n     }).catch((error) => {\n       console.log('Error getting location', error);\n     });\n\n  }\n\n  \n\n}\n"]}