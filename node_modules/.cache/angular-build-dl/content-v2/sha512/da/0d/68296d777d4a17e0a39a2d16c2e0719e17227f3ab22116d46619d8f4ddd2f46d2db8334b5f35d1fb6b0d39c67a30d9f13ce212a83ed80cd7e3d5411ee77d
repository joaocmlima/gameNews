{"version":3,"sources":["./src/app/user/insert-user/insert-user.page.html","./src/app/user/insert-user/insert-user-routing.module.ts","./src/app/user/insert-user/insert-user.module.ts","./src/app/user/insert-user/insert-user.page.scss","./src/app/user/insert-user/insert-user.page.ts"],"names":[],"mappings":"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","file":"user-insert-user-insert-user-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Cadastrar usuário</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <br><br>\\n  <form>\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"fixed\\\">Email</ion-label>\\n      <ion-input name=\\\"email\\\" type=\\\"email\\\" [(ngModel)]=\\\"email\\\"></ion-input>\\n    </ion-item>\\n  \\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"fixed\\\">Senha</ion-label>\\n      <ion-input placeholder=\\\"Senha\\\" name=\\\"senha\\\" [type]=\\\"type\\\" [(ngModel)]=\\\"senha\\\"></ion-input>\\n      <ion-icon (click)=\\\"showSenha()\\\" slot=\\\"end\\\" name=\\\"eye\\\" [color]=\\\"colorActive\\\"></ion-icon>\\n    </ion-item>\\n\\n    <br>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Confirmar senha</ion-label>\\n      <ion-input name=\\\"senha2\\\" type=\\\"password\\\" [(ngModel)]=\\\"senha2\\\"></ion-input>\\n    </ion-item>\\n  \\n    <ion-row>\\n      <ion-col>\\n        <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" type=\\\"submit\\\" (click)=\\\"insertUser()\\\">Cadastrar</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InsertUserPage } from './insert-user.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InsertUserPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InsertUserPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InsertUserPageRoutingModule } from './insert-user-routing.module';\n\nimport { InsertUserPage } from './insert-user.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InsertUserPageRoutingModule\n  ],\n  declarations: [InsertUserPage]\n})\nexport class InsertUserPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvaW5zZXJ0LXVzZXIvaW5zZXJ0LXVzZXIucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { AutenticacaoService } from 'src/app/usuario/autenticacao.service';\n\n@Component({\n  selector: 'app-insert-user',\n  templateUrl: './insert-user.page.html',\n  styleUrls: ['./insert-user.page.scss'],\n})\nexport class InsertUserPage implements OnInit {\n\n  public email:string = \"\";\n  public senha:string = \"\";\n  public senha2:string = \"\";\n  public mensagem:string = \"\";\n  public type=\"password\";\n  public colorActive=\"medium\";\n\n  constructor(\n    public autenticacaoService: AutenticacaoService,\n    public router: Router,\n    public toastController: ToastController\n  ) { }\n\n  ngOnInit() {\n  }\n\n  insertUser(){\n    if(this.senha==this.senha2){\n      this.autenticacaoService.insertNoFirebase(this.email, this.senha).then(\n        (res)=>{\n          this.router.navigate(['home']);\n        }\n      ).catch(\n        (error)=>{\n          this.mensagem = \"Erro ao cadastrar usuário\\n\" + error;\n          this.exibeMensagem();\n        }\n      )\n    }else{\n      this.mensagem = \"Senhas não coincidem!\"\n      this.exibeMensagem();\n    }\n  }\n\n  async exibeMensagem(){\n    const toast = await this.toastController.create({\n      message: this.mensagem,\n      duration:2000\n    });\n    toast.present();\n  }\n\n  showSenha(){\n    if(this.type==\"password\"){\n      this.colorActive = \"secondary\";\n      this.type = \"text\";\n    }else{\n      this.colorActive = \"medium\";\n      this.type = \"password\";\n    }\n    \n  }\n\n}\n"],"sourceRoot":"webpack:///"}