{"version":3,"file":"angular-fire-functions.js","sources":["../../../src/functions/base.ts","../../../src/functions/functions.ts","../../../src/functions/functions.module.ts"],"names":[],"mappings":"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","sourcesContent":["export const proxyPolyfillCompat = {\n  useEmulator: null,\n  useFunctionsEmulator: null,\n  httpsCallable: null,\n};\n","import { Inject, Injectable, InjectionToken, NgZone, Optional } from '@angular/core';\nimport { from, Observable, of } from 'rxjs';\nimport { map, observeOn, shareReplay, switchMap } from 'rxjs/operators';\nimport {\n  FIREBASE_APP_NAME,\n  FIREBASE_OPTIONS,\n  FirebaseAppConfig,\n  FirebaseOptions,\n  ɵAngularFireSchedulers,\n  ɵfirebaseAppFactory,\n  ɵlazySDKProxy,\n  ɵPromiseProxy,\n  ɵapplyMixins\n} from '@angular/fire';\nimport firebase from 'firebase/app';\nimport { proxyPolyfillCompat } from './base';\nimport { HttpsCallableOptions } from '@firebase/functions-types';\nimport { ɵfetchInstance } from '@angular/fire';\n\nexport const ORIGIN = new InjectionToken<string>('angularfire2.functions.origin');\nexport const REGION = new InjectionToken<string>('angularfire2.functions.region');\nexport const NEW_ORIGIN_BEHAVIOR = new InjectionToken<boolean>('angularfire2.functions.new-origin-behavior');\n\n// SEMVER(7): use Parameters to detirmine the useEmulator arguments\n// type UseEmulatorArguments = Parameters<typeof firebase.functions.Functions.prototype.useEmulator>;\ntype UseEmulatorArguments = [string, number];\nexport const USE_EMULATOR = new InjectionToken<UseEmulatorArguments>('angularfire2.functions.use-emulator');\n\n// override httpsCallable for compatibility with 5.x\nexport interface AngularFireFunctions extends Omit<ɵPromiseProxy<firebase.functions.Functions>, 'httpsCallable'> {\n}\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireFunctions {\n\n  public readonly httpsCallable: <T = any, R = any>(name: string, options?: HttpsCallableOptions) => (data: T) => Observable<R>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string | FirebaseAppConfig | null | undefined,\n    zone: NgZone,\n    @Optional() @Inject(REGION) region: string | null,\n    @Optional() @Inject(ORIGIN) origin: string | null,\n    @Optional() @Inject(NEW_ORIGIN_BEHAVIOR) newOriginBehavior: boolean | null,\n    @Optional() @Inject(USE_EMULATOR) _useEmulator: any, // can't use the tuple here\n  ) {\n    const schedulers = new ɵAngularFireSchedulers(zone);\n    const useEmulator: UseEmulatorArguments | null = _useEmulator;\n\n    const functions = of(undefined).pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(() => import('firebase/functions')),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => ɵfetchInstance(`${app.name}.functions.${region || origin}`, 'AngularFireFunctions', app, () => {\n        let functions: firebase.functions.Functions;\n        if (newOriginBehavior) {\n          if (region && origin) {\n            throw new Error('REGION and ORIGIN can\\'t be used at the same time.');\n          }\n          functions = app.functions(region || origin || undefined);\n        } else {\n          functions = app.functions(region || undefined);\n        }\n        if (!newOriginBehavior && !useEmulator && origin) {\n          functions.useFunctionsEmulator(origin);\n        }\n        if (useEmulator) {\n          functions.useEmulator(...useEmulator);\n        }\n        return functions;\n      }, [region, origin, useEmulator])),\n      shareReplay({ bufferSize: 1, refCount: false })\n    );\n\n    this.httpsCallable = <T = any, R = any>(name: string, options?: HttpsCallableOptions) =>\n      (data: T) => from(functions).pipe(\n        observeOn(schedulers.insideAngular),\n        switchMap(functions => functions.httpsCallable(name, options)(data)),\n        map(r => r.data as R)\n      );\n\n    return ɵlazySDKProxy(this, functions, zone);\n\n  }\n\n}\n\nɵapplyMixins(AngularFireFunctions, [proxyPolyfillCompat]);\n","import { NgModule } from '@angular/core';\nimport { AngularFireFunctions } from './functions';\n\n@NgModule({\n  providers: [ AngularFireFunctions ]\n})\nexport class AngularFireFunctionsModule { }\n"]}