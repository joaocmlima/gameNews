{"version":3,"file":"angular-fire-analytics.js","sources":["../../../src/analytics/base.ts","../../../src/analytics/analytics.ts","../../../src/analytics/user-tracking.service.ts","../../../src/analytics/screen-tracking.service.ts","../../../src/analytics/analytics.module.ts"],"names":[],"mappings":"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","sourcesContent":["export const proxyPolyfillCompat = {\n  app: null,\n  logEvent: null,\n  setCurrentScreen: null,\n  setUserId: null,\n  setUserProperties: null,\n  setAnalyticsCollectionEnabled: null,\n};\n","import { Inject, Injectable, InjectionToken, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { EMPTY, of } from 'rxjs';\nimport { isPlatformBrowser } from '@angular/common';\nimport { map, shareReplay, switchMap, observeOn } from 'rxjs/operators';\nimport {\n  ɵAngularFireSchedulers,\n  ɵlazySDKProxy,\n  ɵPromiseProxy,\n  ɵapplyMixins,\n  FirebaseApp\n} from '@angular/fire';\nimport firebase from 'firebase/app';\nimport { proxyPolyfillCompat } from './base';\nimport { ɵfetchInstance } from '@angular/fire';\n\nexport interface Config {\n  [key: string]: any;\n}\n\nexport const COLLECTION_ENABLED = new InjectionToken<boolean>('angularfire2.analytics.analyticsCollectionEnabled');\nexport const APP_VERSION = new InjectionToken<string>('angularfire2.analytics.appVersion');\nexport const APP_NAME = new InjectionToken<string>('angularfire2.analytics.appName');\nexport const DEBUG_MODE = new InjectionToken<boolean>('angularfire2.analytics.debugMode');\nexport const CONFIG = new InjectionToken<Config>('angularfire2.analytics.config');\n\nconst APP_NAME_KEY = 'app_name';\nconst APP_VERSION_KEY = 'app_version';\nconst DEBUG_MODE_KEY = 'debug_mode';\nconst GTAG_CONFIG_COMMAND = 'config';\nconst GTAG_FUNCTION_NAME = 'gtag'; // TODO rename these\nconst DATA_LAYER_NAME = 'dataLayer';\nconst SEND_TO_KEY = 'send_to';\n\nexport interface AngularFireAnalytics extends ɵPromiseProxy<firebase.analytics.Analytics> {\n}\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAnalytics {\n\n  private measurementId: string;\n  private analyticsInitialized: Promise<void> = new Promise(() => {});\n\n  async updateConfig(config: Config) {\n    await this.analyticsInitialized;\n    window[GTAG_FUNCTION_NAME](GTAG_CONFIG_COMMAND, this.measurementId, { ...config, update: true });\n  }\n\n  constructor(\n    app: FirebaseApp,\n    @Optional() @Inject(COLLECTION_ENABLED) analyticsCollectionEnabled: boolean | null,\n    @Optional() @Inject(APP_VERSION) providedAppVersion: string | null,\n    @Optional() @Inject(APP_NAME) providedAppName: string | null,\n    @Optional() @Inject(DEBUG_MODE) debugModeEnabled: boolean | null,\n    @Optional() @Inject(CONFIG) providedConfig: Config | null,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n\n    if (isPlatformBrowser(platformId)) {\n\n      window[DATA_LAYER_NAME] = window[DATA_LAYER_NAME] || [];\n\n      // It turns out we can't rely on the measurementId in the Firebase config JSON\n      // this identifier is not stable. firebase/analytics does a call to get a fresh value\n      // falling back on the one in the config. Rather than do that ourselves we should listen\n      // on our gtag function for a analytics config command\n      // e.g, ['config', measurementId, { origin: 'firebase', firebase_id }]\n      const parseMeasurementId = (...args: any[]) => {\n        if (args[0] === 'config' && args[2].origin === 'firebase') {\n          this.measurementId = args[1];\n          return true;\n        } else {\n          return false;\n        }\n      };\n\n      const patchGtag = (fn?: (...args: any[]) => void) => {\n        window[GTAG_FUNCTION_NAME] = (...args: any[]) => {\n          if (fn) {\n            fn(...args);\n          }\n          // Inject app_name and app_version into events\n          // TODO(jamesdaniels): I'm doing this as documented but it's still not\n          //   showing up in the console. Investigate. Guessing it's just part of the\n          //   whole GA4 transition mess.\n          if (args[0] === 'event' && args[2][SEND_TO_KEY] === this.measurementId) {\n            if (providedAppName) {\n              args[2][APP_NAME_KEY] = providedAppName;\n            }\n            if (providedAppVersion) {\n              args[2][APP_VERSION_KEY] = providedAppVersion;\n            }\n          }\n          if (debugModeEnabled && typeof console !== 'undefined') {\n            // tslint:disable-next-line:no-console\n            console.info(...args);\n          }\n          /**\n           * According to the gtag documentation, this function that defines a custom data layer cannot be\n           * an arrow function because 'arguments' is not an array. It is actually an object that behaves\n           * like an array and contains more information then just indexes. Transforming this into arrow function\n           * caused issue #2505 where analytics no longer sent any data.\n           */\n          // tslint:disable-next-line: only-arrow-functions\n          (function(..._args: any[]) {\n            window[DATA_LAYER_NAME].push(arguments);\n          })(...args);\n        };\n      };\n\n      // Unclear if we still need to but I was running into config/events I passed\n      // to gtag before ['js' timestamp] weren't getting parsed, so let's make a promise\n      // that resolves when firebase/analytics has configured gtag.js that we wait on\n      // before sending anything\n      const firebaseAnalyticsAlreadyInitialized = window[DATA_LAYER_NAME].some(parseMeasurementId);\n      if (firebaseAnalyticsAlreadyInitialized) {\n        this.analyticsInitialized = Promise.resolve();\n        patchGtag();\n      } else {\n        this.analyticsInitialized = new Promise(resolve => {\n          patchGtag((...args) => {\n            if (parseMeasurementId(...args)) {\n              resolve();\n            }\n          });\n        });\n      }\n\n      if (providedConfig) {\n        this.updateConfig(providedConfig);\n      }\n      if (debugModeEnabled) {\n        this.updateConfig({ [DEBUG_MODE_KEY]: 1 });\n      }\n\n    } else {\n\n      this.analyticsInitialized = Promise.resolve();\n\n    }\n\n    const analytics = of(undefined).pipe(\n      observeOn(new ɵAngularFireSchedulers(zone).outsideAngular),\n      switchMap(() => import('firebase/analytics')),\n      switchMap(() => firebase.analytics.isSupported().then(it => it, () => false)),\n      // TODO server-side investigate use of the Universal Analytics API\n      switchMap(supported => supported ? of(undefined) : EMPTY),\n      map(() => {\n        return ɵfetchInstance(`analytics`, 'AngularFireAnalytics', app, () => {\n          const analytics = app.analytics();\n          if (analyticsCollectionEnabled === false) {\n            analytics.setAnalyticsCollectionEnabled(false);\n          }\n          return analytics;\n        }, [app, analyticsCollectionEnabled, providedConfig, debugModeEnabled]);\n      }),\n      shareReplay({ bufferSize: 1, refCount: false })\n    );\n\n    return ɵlazySDKProxy(this, analytics, zone);\n\n  }\n\n}\n\nɵapplyMixins(AngularFireAnalytics, [proxyPolyfillCompat]);\n","import { isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, NgZone, OnDestroy, PLATFORM_ID } from '@angular/core';\nimport { AngularFireAnalytics } from './analytics';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Subscription } from 'rxjs';\n\n@Injectable()\nexport class UserTrackingService implements OnDestroy {\n\n  initialized: Promise<void>;\n  private disposables: Array<Subscription> = [];\n\n  // TODO a user properties injector\n  constructor(\n    analytics: AngularFireAnalytics,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    auth: AngularFireAuth,\n    zone: NgZone,\n  ) {\n\n    if (!isPlatformServer(platformId)) {\n      let resolveInitialized;\n      this.initialized = zone.runOutsideAngular(() => new Promise(resolve => resolveInitialized = resolve));\n      this.disposables = [\n          auth.authState.subscribe(user => {\n            analytics.setUserId(user?.uid);\n            resolveInitialized();\n          }),\n          auth.credential.subscribe(credential => {\n            if (credential) {\n              const method = credential.user.isAnonymous ? 'anonymous' : credential.additionalUserInfo.providerId;\n              if (credential.additionalUserInfo.isNewUser) {\n                analytics.logEvent('sign_up', { method });\n              }\n              analytics.logEvent('login', { method });\n            }\n          })\n      ];\n    } else {\n      this.initialized = Promise.resolve();\n    }\n\n  }\n\n  ngOnDestroy() {\n    this.disposables.forEach(it => it.unsubscribe());\n  }\n}\n","import {\n  ComponentFactoryResolver,\n  Inject,\n  Injectable,\n  NgZone,\n  OnDestroy,\n  Optional,\n  PLATFORM_ID\n} from '@angular/core';\nimport { of, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, groupBy, map, mergeMap, pairwise, startWith, switchMap } from 'rxjs/operators';\nimport { ActivationEnd, Router, ɵEmptyOutletComponent } from '@angular/router';\nimport { AngularFireAnalytics } from './analytics';\nimport { Title } from '@angular/platform-browser';\nimport { isPlatformBrowser } from '@angular/common';\nimport { UserTrackingService } from './user-tracking.service';\n\nconst FIREBASE_EVENT_ORIGIN_KEY = 'firebase_event_origin';\nconst FIREBASE_PREVIOUS_SCREEN_CLASS_KEY = 'firebase_previous_class';\nconst FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY = 'firebase_previous_id';\nconst FIREBASE_PREVIOUS_SCREEN_NAME_KEY = 'firebase_previous_screen';\nconst FIREBASE_SCREEN_CLASS_KEY = 'firebase_screen_class';\nconst FIREBASE_SCREEN_INSTANCE_ID_KEY = 'firebase_screen_id';\nconst FIREBASE_SCREEN_NAME_KEY = 'firebase_screen';\nconst OUTLET_KEY = 'outlet';\nconst PAGE_PATH_KEY = 'page_path';\nconst PAGE_TITLE_KEY = 'page_title';\nconst SCREEN_CLASS_KEY = 'screen_class';\nconst SCREEN_NAME_KEY = 'screen_name';\nconst SCREEN_VIEW_EVENT = 'screen_view';\nconst EVENT_ORIGIN_AUTO = 'auto';\nconst SCREEN_INSTANCE_DELIMITER = '#';\n\n// this is an INT64 in iOS/Android but use INT32 cause javascript\nlet nextScreenInstanceID = Math.floor(Math.random() * (2 ** 32 - 1)) - 2 ** 31;\n\nconst knownScreenInstanceIDs: { [key: string]: number } = {};\n\nconst getScreenInstanceID = (params: { [key: string]: any }) => {\n  // unique the screen class against the outlet name\n  const screenInstanceKey = [\n    params[SCREEN_CLASS_KEY],\n    params[OUTLET_KEY]\n  ].join(SCREEN_INSTANCE_DELIMITER);\n  if (knownScreenInstanceIDs.hasOwnProperty(screenInstanceKey)) {\n    return knownScreenInstanceIDs[screenInstanceKey];\n  } else {\n    const ret = nextScreenInstanceID++;\n    knownScreenInstanceIDs[screenInstanceKey] = ret;\n    return ret;\n  }\n};\n\n@Injectable()\nexport class ScreenTrackingService implements OnDestroy {\n\n  private disposable: Subscription | undefined;\n\n  constructor(\n    analytics: AngularFireAnalytics,\n    @Optional() router: Router,\n    @Optional() title: Title,\n    componentFactoryResolver: ComponentFactoryResolver,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone,\n    @Optional() userTrackingService: UserTrackingService,\n  ) {\n    if (!router || !isPlatformBrowser(platformId)) {\n      return this;\n    }\n    zone.runOutsideAngular(() => {\n      const activationEndEvents = router.events.pipe(filter<ActivationEnd>(e => e instanceof ActivationEnd));\n      this.disposable = activationEndEvents.pipe(\n        switchMap(activationEnd => {\n          // router parseUrl is having trouble with outlets when they're empty\n          // e.g, /asdf/1(bob://sally:asdf), so put another slash in when empty\n          const urlTree = router.parseUrl(router.url.replace(/(?:\\().+(?:\\))/g, a => a.replace('://', ':///')));\n          const pagePath = urlTree.root.children[activationEnd.snapshot.outlet]?.toString() || '';\n          const actualSnapshot = router.routerState.root.children.map(it => it).find(it => it.outlet === activationEnd.snapshot.outlet);\n\n          if (!actualSnapshot) {\n            return of(null);\n          }\n\n          let actualDeep = actualSnapshot;\n          while (actualDeep.firstChild) {\n            actualDeep = actualDeep.firstChild;\n          }\n          const screenName = actualDeep.pathFromRoot.map(s => s.routeConfig?.path).filter(it => it).join('/') || '/';\n\n          const params = {\n            [SCREEN_NAME_KEY]: screenName,\n            [PAGE_PATH_KEY]: `/${pagePath}`,\n            [FIREBASE_EVENT_ORIGIN_KEY]: EVENT_ORIGIN_AUTO,\n            [FIREBASE_SCREEN_NAME_KEY]: screenName,\n            [OUTLET_KEY]: activationEnd.snapshot.outlet\n          };\n          if (title) {\n            params[PAGE_TITLE_KEY] = title.getTitle();\n          }\n\n          let component = actualSnapshot.component;\n          if (component) {\n            if (component === ɵEmptyOutletComponent) {\n              let deepSnapshot = activationEnd.snapshot;\n              // TODO when might there be mutple children, different outlets? explore\n              while (deepSnapshot.firstChild) {\n                deepSnapshot = deepSnapshot.firstChild;\n              }\n              component = deepSnapshot.component;\n            }\n          } else {\n            component = activationEnd.snapshot.component;\n          }\n\n          if (typeof component === 'string') {\n            return of({ ...params, [SCREEN_CLASS_KEY]: component });\n          } else if (component) {\n            const componentFactory = componentFactoryResolver.resolveComponentFactory(component);\n            return of({ ...params, [SCREEN_CLASS_KEY]: componentFactory.selector });\n          } else {\n            // lazy loads cause extra activations, ignore\n            return of(null);\n          }\n        }),\n        filter(it => it),\n        map(params => ({\n          [FIREBASE_SCREEN_CLASS_KEY]: params[SCREEN_CLASS_KEY],\n          [FIREBASE_SCREEN_INSTANCE_ID_KEY]: getScreenInstanceID(params),\n          ...params\n        })),\n        groupBy(it => it[OUTLET_KEY]),\n        mergeMap(it => it.pipe(\n          distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)),\n          startWith(undefined),\n          pairwise(),\n          map(([prior, current]) =>\n            prior ? {\n              [FIREBASE_PREVIOUS_SCREEN_CLASS_KEY]: prior[SCREEN_CLASS_KEY],\n              [FIREBASE_PREVIOUS_SCREEN_NAME_KEY]: prior[SCREEN_NAME_KEY],\n              [FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY]: prior[FIREBASE_SCREEN_INSTANCE_ID_KEY],\n              ...current\n            } : current\n          ),\n          switchMap(async params => {\n            if (userTrackingService) {\n              await userTrackingService.initialized;\n            }\n            return await analytics.logEvent(SCREEN_VIEW_EVENT, params);\n          })\n        ))\n      ).subscribe();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.disposable) {\n      this.disposable.unsubscribe();\n    }\n  }\n\n}\n","import { NgModule, Optional } from '@angular/core';\nimport { ScreenTrackingService } from './screen-tracking.service';\nimport { AngularFireAnalytics } from './analytics';\nimport { UserTrackingService } from './user-tracking.service';\n\n@NgModule({\n  providers: [ AngularFireAnalytics ]\n})\nexport class AngularFireAnalyticsModule {\n  constructor(\n    analytics: AngularFireAnalytics,\n    @Optional() screenTracking: ScreenTrackingService,\n    @Optional() userTracking: UserTrackingService\n  ) {\n    // calling anything on analytics will eagerly load the SDK\n    // tslint:disable-next-line:no-unused-expression\n    analytics.app.then(() => {});\n  }\n}\n"]}